@page "/materias"

<style>
    .container {
        height: 100%;
        min-height: 100dvh;
        align-self: flex-start;
        place-self: flex-start;
        width: 100%;
    }
</style>

@if (idAlumnoLogueado == 0)
{
    <p>Acceso denegado</p>
} else
{
    <div class="container">
        <h1>Materias</h1>

        @if (inscripciones == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Materia</th>
                        <th>Condicion</th>
                        <th>Nota</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var inscripcion in inscripciones)
                    {
                        <tr>
                            <td>@inscripcion.IdCursoNavigation.IdMateriaNavigation.DescMateria</td>
                            <td>@inscripcion.Condicion</td>
                            <td>@inscripcion.Nota</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
}


@inject Blazor.Services.ConnectionService ClientService
@code {
    private clientSwagger.clientSwagger client;

    private int idAlumnoLogueado;
    private ICollection<clientSwagger.AlumnosInscripcione> inscripciones;
    private IDictionary<string, string>? currentUser;

    protected override async Task OnInitializedAsync() {
        client = ClientService.Client();

        currentUser = ClientService.GetCurrentUser();

        if (currentUser == null)
        {
            idAlumnoLogueado = 0;
        } else if (currentUser["TipoPersona"] != "Alumno")
        {
            idAlumnoLogueado = 0;
        } else
        {
            idAlumnoLogueado = int.Parse(currentUser["IdPersona"]);
            await Task.Delay(1000);
            inscripciones = await client.Get_Alumnos_Inscripciones_By_AlumnoAsync(idAlumnoLogueado);
        }
    }
}